{"version":3,"sources":["components/EntryForm.js","components/ListItem.js","components/EditableList.js","components/ToDoList.js","App.js","index.js"],"names":["EntryForm","addNewEntry","useState","text","number","state","updateState","onSubmit","event","preventDefault","placeholder","type","onChange","prevState","target","value","ListItem","entry","entryList","updateList","removeEntry","editing","setEditing","setState","toggleEditing","deleteEntry","className","onClick","map","item","EditableList","time","ToDoList","props","Date","now","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f886811.chunk.js","sourcesContent":["\"use strict\"\nimport React ,{useState} from 'react';\n\nfunction EntryForm({addNewEntry}) {\n  const [state, updateState] = useState({\n    text: \"\",\n    number: \"\"\n  })\n\n  const addEntry = (event) => {\n    event.preventDefault()\n    if (!state.text || !state.number)\n      return\n    addNewEntry(state)\n    updateState({\n      text: \"\",\n      number: \"\"\n    })\n  }\n\n  const updateText = (event)=>{\n    updateState((prevState) => {\n      return {\n        text: event.target.value,\n        number: prevState.number\n      }\n    })\n  }\n\n  const updateNumber = (event)=>{\n    updateState((prevState) => {\n      return {\n        text: prevState.text,\n        number: event.target.value\n      }\n    })\n  }\n\n  return (\n    <form onSubmit={addEntry}>\n      <input placeholder=\"Food name\" type=\"text\" onChange={updateText} value={state.text}/>\n      <input placeholder=\"calories consumed\" type=\"number\" onChange={updateNumber} value={state.number}/><br/>\n      <input type=\"submit\" value=\"Add\"/>\n    </form>\n  );\n}\n\nexport default EntryForm;\n","\"use strict\"\nimport React, {useState} from 'react';\n\nfunction ListItem({entry, entryList, updateList, removeEntry}) {\n  const [editing, setEditing] = useState(false)\n  const [state, setState] = useState(entry)\n\n  const toggleEditing = ()=>{\n    setEditing(!editing)\n  }\n\n  const saveEditing = ()=>{\n    if (!state.text || !state.number)\n      return\n    toggleEditing()\n    entryList.map(item => {\n      if (item === entry){\n        item.text = state.text\n        item.number = state.number\n      }\n    })\n    updateList(entryList)\n  }\n\n  const deleteEntry = ()=>{\n    removeEntry(entry)\n  }\n\n  const updateText = (event)=>{\n    setState((prevState) => {\n      return {\n        text: event.target.value,\n        number: prevState.number\n      }\n    })\n  }\n\n  const updateNumber = (event)=>{\n    setState((prevState) => {\n      return {\n        text: prevState.text,\n        number: event.target.value\n      }\n    })\n  }\n\n  return (\n    editing?(\n      <div className=\"item\">\n        <input value={state.text} type=\"text\" onChange={updateText}/>\n        <br/>\n        <input value={state.number} type=\"number\" onChange={updateNumber}/>\n        <div>\n          <button onClick={saveEditing}>Save</button>\n          <button onClick={deleteEntry}>Delete</button>\n        </div>\n      </div>\n    ):(\n      <div className=\"item\">\n        <div>{entry.text}</div>\n        <div>You consumed {entry.number} calories</div>\n        <div>\n          <button onClick={toggleEditing}>Edit</button>\n          <button onClick={deleteEntry}>Delete</button>\n        </div>\n      </div>\n    )\n  );\n}\n\nexport default ListItem;","\"use strict\"\nimport React from 'react';\nimport ListItem from \"./ListItem\";\n\nfunction EditableList({entryList, removeEntry, updateList}) {\n  return (\n    <div className=\"listDiv\">\n      {\n        entryList.map(entry => (\n          <ListItem key={entry.time} entry={entry} entryList={entryList} updateList={updateList} removeEntry={removeEntry}/>\n        ))\n      }\n    </div>\n  );\n}\n\nexport default EditableList;\n","\"use strict\"\nimport './styles/ToDoList.scss'\n\nimport React, {useState} from 'react';\n\nimport EntryForm from \"./EntryForm\";\nimport EditableList from \"./EditableList\";\n\nfunction ToDoList(props) {\n  const [entryList, updateList] = useState([])\n\n  const addEntry = (entry) => {\n    updateList([...entryList, {...entry, time: Date.now()}])\n  }\n\n  const removeEntry = (entry) => {\n    updateList(entryList.filter(item => item !== entry))\n  }\n\n  return (\n    <div className=\"todo-list\">\n      <EntryForm addNewEntry={addEntry}/>\n      <EditableList removeEntry={removeEntry} entryList={entryList} updateList={updateList}/>\n    </div>\n  );\n}\n\nexport default ToDoList;\n","import './styles/App.css';\n\nimport ToDoList from \"./components/ToDoList\";\n\nfunction App() {\n  return (\n    <ToDoList/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}